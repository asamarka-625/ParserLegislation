version: '3.8'

services:
  parser:
    build: .
    command: python parser.py
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env
    restart: unless-stopped

  proc-worker-1:
    build: .
    command: python main.py --worker-id=1 --total-workers=4
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - WORKER_ID=1
      - TOTAL_WORKERS=4
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped

  proc-worker-2:
    build: .
    command: python main.py --worker-id=2 --total-workers=4
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - WORKER_ID=2
      - TOTAL_WORKERS=4
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped

  proc-worker-3:
    build: .
    command: python main.py --worker-id=3 --total-workers=4
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - WORKER_ID=3
      - TOTAL_WORKERS=4
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped

  proc-worker-4:
    build: .
    command: python main.py --worker-id=4 --total-workers=4
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - WORKER_ID=4
      - TOTAL_WORKERS=4
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  postgres_data: